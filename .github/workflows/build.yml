name: Build and Release

on:
  push:
    branches:
      - '*'  # Run on all branches
    tags:
      - 'v*'  # Trigger on version tags

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10']
        include:
          - os: ubuntu-latest
            asset_name: asterics-grid-speech-linux
          - os: windows-latest
            asset_name: asterics-grid-speech-windows
          - os: macos-latest
            asset_name: asterics-grid-speech-macos

    steps:
    - uses: actions/checkout@v4

    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y portaudio19-dev espeak-ng
        
    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install portaudio espeak-ng

    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - name: Set up Python
      run: |
        uv python install
        uv venv

    - name: Install dependencies
      run: |
        uv sync
        uv pip install pyinstaller

    - name: Install Windows-specific dependencies
      if: runner.os == 'Windows'
      run: |
        uv pip install numpy==1.26.4
        
    - name: Build executable
      run: |
        uv run python build.py
        
    - name: Compress artifacts (Unix)
      if: runner.os != 'Windows'
      run: |
        cd dist
        tar -czf ${{ matrix.asset_name }}.tar.gz asterics-grid-speech/
        
    - name: Compress artifacts (Windows)
      if: runner.os == 'Windows'
      run: |
        cd dist
        7z a ${{ matrix.asset_name }}.zip asterics-grid-speech/
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: |
          dist/${{ matrix.asset_name }}.tar.gz
          dist/${{ matrix.asset_name }}.zip
        if-no-files-found: error
        
  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          asterics-grid-speech-linux/asterics-grid-speech-linux.tar.gz
          asterics-grid-speech-windows/asterics-grid-speech-windows.zip
          asterics-grid-speech-macos/asterics-grid-speech-macos.tar.gz
        draft: false
        prerelease: false
        generate_release_notes: true 